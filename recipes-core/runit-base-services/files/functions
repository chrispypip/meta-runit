# *-*-shell-*-*

PATH=/bin:/usr/bin:/sbin:/usr/sbin

msg() {
    # bold
    printf "\033[1m=> $@\033[m\n"
}

msg_ok() {
    # bold/green
    printf "\033[1m\033[32m OK \033[m\n"
}

msg_done() {
    # bold/green
    printf "\033[1m\033[32m DONE: $@\033[m\n"
}

msg_error() {
    # bold/red
    printf "\033[1m\033[31mERROR: $@\033[m\n"
}

msg_warn() {
    # bold/yellow
    printf "\033[1m\033[33mWARNING: $@\033[m\n"
}

emergency_shell() {
    echo
    echo "Cannot continue due to errors above, starting emergency shell."
    echo "When ready type exit to continue booting."
    /bin/sh -l
}

detect_virt() {
   # Detect LXC containers
   [ ! -e /proc/self/environ ] && return
   if grep -q lxc /proc/self/environ >/dev/null; then
       export VIRTUALIZATION=1
   fi
}

deactivate_vgs() {
   _group=${1:-All}
   if [ -x /sbin/vgchange -o -x /bin/vgchange ]; then
       vgs=$(vgs|wc -l)
       if [ $vgs -gt 0 ]; then
           msg "Deactivating $_group LVM Volume Groups..."
           vgchange -an
       fi
   fi
}

deactivate_crypt() {
   if [ -x /sbin/dmsetup -o -x /bin/dmsetup ]; then
       msg "Deactivating Crypt Volumes"
       for v in $(dmsetup ls --target crypt --exec "dmsetup info -c --noheadings -o open,name"); do
           [ ${v%%:*} = "0" ] && cryptsetup close ${v##*:}
       done
       deactivate_vgs "Crypt"
   fi
}

# Peel out the service name from the execution string for this shell.
get_svc_name() {
    echo $(basename $(dirname $(realpath $0)))
}

# Handle a self-shutdown for a one-shot "service" that runs/tries to run ONCE and
# then shuts itself down according to needs.
svc_stop() {
    # The 'basename' of the dirname of the realpath of the script calling this
    # should be the one that corresponds to the service's name, thereby doing
    # a transparent self-shutdown of the same if we call the stop on it.
    sv stop $(get_svc_name)
}

# Series of functions to handle ran/not-ran for a one-shot for check scripting
# for services groups, etc. use.  We want/need to act like the service is
# "running" if it's been "ran" (i.e. just before calling sv_stop...)
svc_has_ran() {
    # Check to see if the service in question has been flagged in /var/tmp/runit-svcs
    [ -e /var/tmp/runit-svcs ] && [ -e /var/tmp/runit-svcs/$(get_svc_name) ] && return 0 || return 1
}

svc_ran() {
    [ -e /var/tmp/runit-svcs ] && mkdir -p /var/tmp/runit-svcs
    touch /var/tmp/runit-svcs/$(get_svc_name)
}

svc_reset_run_flag() {
    SVC_NAME=$(get_svc_name)
    [ -e /var/tmp/runit-svcs/$SVC_NAME ] && rm -f /var/tmp/runit-svcs/$SVC_NAME
}
